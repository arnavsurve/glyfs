name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: glyfs
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Get EC2 Instance IP
        id: get-instance
        run: |
          INSTANCE_IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=glyfs-app-production" \
                      "Name=instance-state-name,Values=running" \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "instance_ip=$INSTANCE_IP" >> $GITHUB_OUTPUT

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        with:
          host: ${{ steps.get-instance.outputs.instance_ip }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG
          script: |
            # Use the deployment script
            ECR_REGISTRY=$ECR_REGISTRY \
            ECR_REPOSITORY=$ECR_REPOSITORY \
            IMAGE_TAG=$IMAGE_TAG \
            AWS_REGION=${{ env.AWS_REGION }} \
            /home/ec2-user/scripts/deploy-ecr.sh

      - name: Verify deployment
        run: |
          sleep 5
          INSTANCE_IP=${{ steps.get-instance.outputs.instance_ip }}
          if curl -f http://$INSTANCE_IP:8080/health; then
            echo "Deployment verified successfully!"
          else
            echo "Deployment verification failed!"
            exit 1
          fi

      - name: Notify on success
        if: success()
        run: |
          echo "Deployed to production successfully!"
          echo "Image: ${{ steps.build-image.outputs.image }}"
          echo "URL: http://${{ steps.get-instance.outputs.instance_ip }}:8080"

      - name: Notify on failure
        if: failure()
        run: |
          echo "Deployment failed! Check logs for details."
